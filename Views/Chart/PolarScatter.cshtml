@using Syncfusion.EJ2
@section ControlsSection{
    @{

       var Polar = "Polar";
    }

        <div class="col-lg-8 control-section">      
                <ejs-chart id="container" load="load" title="GDP by Countries">
                    <e-chart-tooltipsettings enable="true" header="" format="<b>${point.x}</b> <br>GDP: <b>${point.y}%</b>">
                    </e-chart-tooltipsettings>
                    <e-chart-primaryyaxis minimum="0" maximum="8" interval="2"></e-chart-primaryyaxis>
                    <e-chart-primaryxaxis interval="1" labelPlacement="@Syncfusion.EJ2.Charts.LabelPlacement.OnTicks" valueType="@Syncfusion.EJ2.Charts.ValueType.Category"></e-chart-primaryxaxis>
                    <e-chart-legendsettings enableHighlight="true">
                    </e-chart-legendsettings>
                    <e-series-collection>
                        <e-series dataSource="ViewBag.Chartpoints" name="2015" xName="Country" width="2" yName="GDP_2013" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Polar" drawType="@Syncfusion.EJ2.Charts.ChartDrawType.Scatter">
                            <e-series-marker height="7" width="7">
                                <e-series-datalabel name="TooltipMappingName"></e-series-datalabel>
                            </e-series-marker>
                        </e-series>
                        <e-series dataSource="ViewBag.Chartpoints" name="2016" xName="Country" width="2" yName="GDP_2014" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Polar" drawType="@Syncfusion.EJ2.Charts.ChartDrawType.Scatter">
                            <e-series-marker height="7" width="7" shape="Diamond">
                                <e-series-datalabel name="TooltipMappingName"></e-series-datalabel>
                            </e-series-marker>
                        </e-series>
                        <e-series dataSource="ViewBag.Chartpoints" name="2017" xName="Country" width="2" yName="GDP_2015" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Polar" drawType="@Syncfusion.EJ2.Charts.ChartDrawType.Scatter">
                            <e-series-marker height="7" width="7" shape="Triangle">
                                <e-series-datalabel name="TooltipMappingName"></e-series-datalabel>
                            </e-series-marker>
                        </e-series>
                    </e-series-collection>
                </ejs-chart>
            </div>
            <div class="col-lg-4 property-section">
                <div class="property-panel-section">
                    <div class="property-panel-content">
                        <table id="property" class="property-panel-table" title="Properties" style="width: 100%">
                            <tr style="height: 50px">
                                <td style="width: 50%">
                                    <div>Series Type:</div>
                                </td>
                                <td style="width: 50%;">
                                    <ejs-dropdownlist id="serieschange" dataSource="@ViewBag.select" value="Polar" change="seriesChange" popupHeight="220px"></ejs-dropdownlist>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
          <script>
          @*custom code start*@
            function load(args) {
                var selectedTheme = location.hash.split('/')[1];
                selectedTheme = selectedTheme ? selectedTheme : 'Material';
                args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
                args.chart.primaryXAxis.coefficient = ej.base.Browser.isDevice ? 80 : 100;
            }
        @*custom code end*@
            function seriesChange() {
                var chart = document.getElementById('container').ej2_instances[0];
                chart.series[0].type = this.value;
                chart.series[1].type = this.value;
                chart.series[2].type = this.value;
                chart.series[0].animation.enable = false;
                chart.series[1].animation.enable = false;
                chart.series[2].animation.enable = false;                
                chart.refresh();
            }
        </script>
@*custom code start*@

        <style>
            #control-container {
                padding: 0px !important;
            }
        </style>
@*custom code end*@
    }
    @section ActionDescription{
        <p>
            This sample shows GDP growth of different countries for a few years in the polar and radar charts using the scatter series.
        </p>
    }
    @section Description{
        <p>
            In this example, you can see how to render and configure polar and radar charts with a scatter series. Switching between polar and radar series can be done using the <b>Series Type</b> in the property panel.
        </p>
        <p>
            <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
        </p>
        <p>
            More information about the polar and radar chart with a scatter series can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/chart/chart-types/polar#scatter">documentation section</a>.
        </p>
    }
@section Title{
                    <title>ASP.NET Core Chart Scatter Example - Syncfusion Demos </title> 
                }
@section Meta{
                    <meta name="description" content="This example demonstrates the Scatter in ASP.NET Core Chart control. Explore here for more details."/>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Scatter in ASP.NET Core Chart Control</h1>
                }