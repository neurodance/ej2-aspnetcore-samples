@using Syncfusion.EJ2
@section ControlsSection{
    @{
        var Polar = "Polar";
    }
    <div class="col-lg-8 control-section">
        <ejs-chart id="container" load="load" title="Top 10 Mobile Markets by Number of Subscriptions">
            <e-chart-primaryxaxis interval="1" labelPlacement="@Syncfusion.EJ2.Charts.LabelPlacement.OnTicks" valueType="@Syncfusion.EJ2.Charts.ValueType.Category"></e-chart-primaryxaxis>
            <e-chart-primaryyaxis labelFormat="{value}M"></e-chart-primaryyaxis>
            <e-chart-tooltipsettings enable="true" header="" format="<b>${point.text}</b> <br> ${series.name}: <b>${point.y}</b>">
            </e-chart-tooltipsettings>
            <e-chart-legendsettings enableHighlight="true">
            </e-chart-legendsettings>
            <e-series-collection>
                <e-series dataSource="ViewBag.ChartPoints" name="Population" xName="Country" width="2" yName="Population" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Polar" drawType="@Syncfusion.EJ2.Charts.ChartDrawType.Column">
                    <e-series-border color="white" width="1"></e-series-border>
                    <e-series-marker>
                        <e-series-datalabel name="TooltipMappingName"></e-series-datalabel>
                    </e-series-marker>
                </e-series>
                <e-series dataSource="ViewBag.ChartPoints" name="Mobile Subscriptions" xName="Country" width="2" yName="MobileSubscriber" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Polar" drawType="@Syncfusion.EJ2.Charts.ChartDrawType.Column">
                    <e-series-border color="white" width="1"></e-series-border>
                    <e-series-marker>
                        <e-series-datalabel name="TooltipMappingName"></e-series-datalabel>
                    </e-series-marker>
                </e-series>
                <e-series dataSource="ViewBag.ChartPoints" name="3G/4G Subscriptions" xName="Country" width="2" yName="NetworkSubscriber" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Polar" drawType="@Syncfusion.EJ2.Charts.ChartDrawType.Column">
                    <e-series-border color="white" width="1"></e-series-border>
                    <e-series-marker>
                        <e-series-datalabel name="TooltipMappingName"></e-series-datalabel>
                    </e-series-marker>
                </e-series>
            </e-series-collection>
        </ejs-chart>
    </div>
    <div class="col-lg-4 property-section">
        <div class="property-panel-section">
            <div class="property-panel-content">
                <table id="property" class="property-panel-table" title="Properties" style="width: 100%">
                    <tr style="height: 50px">
                        <td style="width: 50%">
                            <div>Series Type:</div>
                        </td>
                        <td style="width: 50%;">
                            <ejs-dropdownlist id="serieschange" dataSource="@ViewBag.select" value="Polar" change="seriesChange" popupHeight="220px"></ejs-dropdownlist>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>


    <script>
    @*custom code start*@
        function load(args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
            args.chart.primaryXAxis.coefficient = ej.base.Browser.isDevice ? 80 : 100;
            args.chart.primaryXAxis.labelStyle.size = ej.base.Browser.isDevice ? "9px" : "12px";
        }
   @*custom code end*@     
        function seriesChange() {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.series[0].type = this.value;
            chart.series[1].type = this.value;
            chart.series[2].type = this.value;
            chart.series[0].animation.enable = false;
            chart.series[1].animation.enable = false;
            chart.series[2].animation.enable = false;
            chart.refresh();
        }
    </script>
@*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
@*custom code end*@
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Column in ASP.NET Core Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample shows the top 10 mobile markets by the number of subscriptions in polar and radar charts using column series.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure polar and radar charts with a column series. Switching between polar and radar series can be done using <b>Series Type</b> in the property panel.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <p>
        More information about the polar and radar chart with column series can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/chart/chart-types/polar#column">documentation section</a>.
    </p>
}
@section Title{
                    <title>ASP.NET Core Chart Column Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Column in ASP.NET Core Chart Control</h1>
                }