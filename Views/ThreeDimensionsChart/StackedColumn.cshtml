@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section" align="center">
        <ejs-chart3d id="columnContainer" load="load" axisLabelRender="axisLabelRender" title="Steel Production by Countries, Grouped by Continent" enableRotation="true" rotation="7" tilt="10" depth="100" wallColor="transparent" height="400">
            <e-chart3d-tooltipsettings enable="true" format="${point.x} : <b>${point.y} Mmt">
            </e-chart3d-tooltipsettings>
            <e-chart3d-legendsettings enableHighlight="true">
            </e-chart3d-legendsettings>
            <e-chart3d-primaryxaxis valueType="@Syncfusion.EJ2.Charts.ValueType.Category" interval="1">
            </e-chart3d-primaryxaxis>
            <e-chart3d-primaryyaxis interval="10">
            </e-chart3d-primaryyaxis>
            <e-chart3d-series-collection>
                <e-chart3d-series dataSource="ViewBag.ChartPoints" xName="X" yName="Y" name="Iran" stackingGroup="Asia" columnWidth="0.6" type="@Syncfusion.EJ2.Charts.Chart3DSeriesType.StackingColumn">
                </e-chart3d-series>
                <e-chart3d-series dataSource="ViewBag.ChartPoints" xName="X" yName="Y1" name="Indonesia" stackingGroup="Asia" columnWidth="0.6" type="@Syncfusion.EJ2.Charts.Chart3DSeriesType.StackingColumn">
                </e-chart3d-series>
                <e-chart3d-series dataSource="ViewBag.ChartPoints" xName="X" yName="Y2" name="Italy" stackingGroup="Europe" columnWidth="0.6" type="@Syncfusion.EJ2.Charts.Chart3DSeriesType.StackingColumn">
                </e-chart3d-series>
                <e-chart3d-series dataSource="ViewBag.ChartPoints" xName="X" yName="Y3" name="France" stackingGroup="Europe" columnWidth="0.6" type="@Syncfusion.EJ2.Charts.Chart3DSeriesType.StackingColumn">
                </e-chart3d-series>
            </e-chart3d-series-collection>
        </ejs-chart3d>
    </div>

    @*custom code start*@
    <script>
        function load(args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
            args.chart.primaryYAxis.maximum = ej.base.Browser.isDevice ? 50 : 60;
        }
        function axisLabelRender (args) {
            if (args.axis.name === 'primaryYAxis') {
                args.text = args.text + ' Mmt';
            }
        }
    </script>
    @*custom code end*@
}
@*custom code start*@
@section Scripts {
}
<style>

    #control-container {
        padding: 0px !important;
    }
</style>
@section Meta{
    <meta name="description" content="This example demonstrates the 3D Stacked Column in ASP.NET Core 3D Chart control. Explore here for more details." />
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This example of a 3D stacked column chart visualizes the steel production of countries, grouped by continent. The legend in the sample provides information about these series.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure a 3D stacked column chart. The 3D stacked column chart stacks points in the series vertically. Additionally, the <code>StackingGroup</code> property can be used to group stacked collections based on category.
    </p>
    <p>
        <code>Tooltips</code> are enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
}
@section Title{
    <title>ASP.NET Core 3D Stacked Column Chart Example - Syncfusion Demos </title>
                }
@section Header{
    <h1 class='sb-sample-text'>Example of 3D Stacked Column in ASP.NET Core 3D Chart Control</h1>
                }