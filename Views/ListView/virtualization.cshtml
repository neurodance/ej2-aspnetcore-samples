@using Syncfusion.EJ2
@section ControlsSection{
   
    <div class="col-lg-8  control-section">
        <!-- ListView element -->
        <ejs-listview id="ui-list" dataSource="ViewBag.data1" enableVirtualization="true" cssClass="e-list-template" headerTitle="Contacts"
                      height=500 template="#listTemplate" actionComplete='onActionComplete' actionBegin='onActionBegin' showHeader="true">
            <e-listview-fieldsettings text="name"></e-listview-fieldsettings>
        </ejs-listview>
    </div>
    <div class="col-lg-4 property-section">
        <table id="property" title="Properties">
            <tbody>
                <tr>
                    <td style="width: 50%">
                        <div class="userselect">Load data</div>
                    </td>
                    <td style="width: 50%;padding-right: 10px">
                        <div>
                            <ejs-dropdownlist id="ddl" dataSource="ViewBag.ddlData" index="0" change='onChange' placeholder="Select a range"
                                              popupHeight='200px'>
                                <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                            </ejs-dropdownlist>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width: 50%">
                        <div class="userselect">Time taken</div>
                    </td>
                    <td style="width: 50%;padding-right: 10px">
                        <div style="padding-left: 10px;">
                            <span id="time">0 ms</span>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Virtualization in ASP.NET Core ListView control. Explore here for more details."/>
                }

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the default functionalities of UI virtualization. Scroll list item to experience UI virtualization.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            UI virtualization is an optimization technique to avoid unnecessarily constructing and rendering objects for list items by loading only visible list items in a view port. This helps improve ListView performance when loading a large number of items. The
            list items are updated dynamically while users scroll the list. The virtualization can be enabled by using the <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/cref_files/aspnetcore-js2/Syncfusion.EJ2~Syncfusion.EJ2.Lists.ListView~EnableVirtualization.html'>EnableVirtualization</a></code> API in Listview.
        </p>
    </div>
}

<script type="text/javascript">

    var listviewInstance;
    var dataSource = {};
    var startTime;
    var endTime;
    var liElement;
    function onActionBegin() {
        listviewInstance = document.getElementById("ui-list").ej2_instances[0];
        dataSource['data1'] = @Html.Raw(Json.Serialize(ViewBag.data1));
        dataSource['data5'] = @Html.Raw(Json.Serialize(ViewBag.data5));
        dataSource['data10'] = @Html.Raw(Json.Serialize(ViewBag.data10));
        dataSource['data25'] = @Html.Raw(Json.Serialize(ViewBag.data25));
        startTime = new Date();
       }

       function onActionComplete() {
           endTime = new Date();
           document.getElementById('time').innerText = (endTime.getTime() - startTime.getTime()) + ' ms';
           liElement = document.getElementById('ui-list');

           if (ej.base.Browser.isDevice) {
               liElement.classList.add('ui-mobile');
           }

           ej.popups.createSpinner({
               target: liElement
           });
       }

       function onChange(e) {
           ej.popups.showSpinner(liElement);
           startTime = new Date();
           listviewInstance.dataSource = dataSource['data' + e.value];
           listviewInstance.dataBind();
           endTime = new Date();
           document.getElementById('time').innerText = (endTime.getTime() - startTime.getTime()) + ' ms';
           ej.popups.hideSpinner(liElement);
       }
</script>

<script id="listTemplate" type="text/x-template">
    <div class="e-list-wrapper e-list-avatar">
        ${if(imgUrl)}
        <span id="hideUI" class="e-avatar e-avatar-circle" icon="${icon}">${icon}</span>
        <img id="showUI" class="e-avatar e-avatar-circle" src="${imgUrl }" />
        ${else}
        <span id="showUI" class="e-avatar e-avatar-circle" icon="${icon}">${icon}</span>
        <img id="hideUI" class="e-avatar e-avatar-circle" src=" " />
        ${/if}
        <span class="e-list-content">${name}</span>
    </div>
</script>

<style>


    /* ListView position alignment */

    #ui-list.e-listview {
        margin: auto;
        max-width: 325px;
        line-height: initial;
        border: 1px solid lightgray;
    }

        /* ListView header alignment */

        #ui-list.e-listview .e-list-header {
            height: 50px
        }

            #ui-list.e-listview .e-list-header .e-text {
                line-height: 18px
            }

        /* ListView template customization */

        #ui-list.e-listview #showUI {
            display: flex;
        }

        #ui-list.e-listview #hideUI {
            display: none;
        }

        #ui-list.e-listview .e-list-item {
            padding: 3px 0;
        }

        #ui-list.e-listview [icon="R"] {
            background: lightgrey;
        }

        #ui-list.e-listview [icon="M"] {
            background: pink;
        }

        #ui-list.e-listview [icon="A"] {
            background: lightgreen;
        }

        #ui-list.e-listview [icon="S"] {
            background: lightskyblue;
        }

        #ui-list.e-listview [icon="J"] {
            background: orange;
        }

        #ui-list.e-listview [icon="N"] {
            background: lightblue;
        }

    /* ListView theme customization */

    .highcontrast #ui-list.e-listview .e-list-item,
    .highcontrast #ui-list.e-listview .e-list-header {
        background: rgb(0, 0, 0);
    }

    body.material-dark .property-section {
        color: #ffffff;
    }

        .highcontrast #ui-list.e-listview .e-list-item.e-active {
            background: #ffd939;
            color: #000000;
        }
</style>
@section Title{
                    <title>ASP.NET Core ListView Virtualization Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Virtualization in ASP.NET Core ListView Control</h1>
                }
