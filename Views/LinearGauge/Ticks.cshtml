@section ControlsSection{
    @{
        var labelFont = new Syncfusion.EJ2.LinearGauge.LinearGaugeFont { FontFamily = "inherit" };
        var titleStyle = new Syncfusion.EJ2.LinearGauge.LinearGaugeTitleStyleLinearGauge { FontFamily = "inherit", FontWeight = "499" };
    }
    <div class="control-section">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12"
             style="display: flex;justify-content: center; align-items: center;">
                <div style="margin: auto;padding: 10px;">
                    <table>
                        <tbody>
                            <tr>
                                <td>
                                    <div id='horizontal' style="padding:6px;cursor:pointer;width:86px;color:black;font-size:15px;border:1px solid #0074E3;background-color:white;text-align:center">
                                        Horizontal
                                    </div>
                                </td>
                                <td>
                                    <div id='vertical' style="padding:6px;cursor:pointer;width:86px;color:white;font-size:15px;border:1px solid #0074E3;background-color: #0074E3;text-align:center">
                                        Vertical
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <pre style="background-color: inherit; border:hidden"></pre>
        <div id="containerBox">
            <div id='containerOutside' class="col-xs-5 col-sm-5 col-lg-3 col-md-3" style="display: flex;justify-content: center; align-items: center;">
                <ejs-lineargauge load="gaugeLoad" id='outsideTicks' Background='Transparent'
                             Title='Outside ticks' TitleStyle='titleStyle' Width='150px' Height='350px' style='display:block;'
                             orientation='Vertical'>
                    <e-lineargauge-axes>
                        <e-lineargauge-axis Minimum="0" Maximum="100" OpposedPosition="true">
                            <e-axis-majorticks Interval="20" Height="7" Width="1" Position=Outside></e-axis-majorticks>
                            <e-axis-minorticks Interval="10" Height="3" Position=Outside></e-axis-minorticks>
                            <e-axis-line Width="5"></e-axis-line>
                            <e-axis-labelstyle Position=Outside font=labelFont></e-axis-labelstyle>
                            <e-lineargauge-pointers>
                                <e-lineargauge-pointer Width=0></e-lineargauge-pointer>
                            </e-lineargauge-pointers>
                        </e-lineargauge-axis>
                    </e-lineargauge-axes>
                </ejs-lineargauge>
            </div>
            <div id='containerCross' class="col-xs-5 col-sm-5 col-lg-3 col-md-3" style="display: flex;justify-content: center; align-items: center;">
                <ejs-lineargauge load="gaugeLoad" id='crossTicks' Background='Transparent'
                             Title='Cross ticks' TitleStyle='titleStyle' Width='150px' Height='350px' style='display:block;'
                             Orientation='Vertical'>
                    <e-lineargauge-axes>
                        <e-lineargauge-axis Minimum="0" Maximum="100">
                            <e-axis-labelstyle font=labelFont></e-axis-labelstyle>
                            <e-axis-majorticks Interval="20" Height="7" Width="1" Position=Cross></e-axis-majorticks>
                            <e-axis-minorticks Interval="10" Height="3" Position=Cross></e-axis-minorticks>
                            <e-axis-line Width="5"></e-axis-line>
                            <e-lineargauge-pointers>
                                <e-lineargauge-pointer Width=0></e-lineargauge-pointer>
                            </e-lineargauge-pointers>
                        </e-lineargauge-axis>
                    </e-lineargauge-axes>
                </ejs-lineargauge>
            </div>
            <div id='containerInside' class="col-xs-5 col-sm-5 col-lg-3 col-md-3" style="display: flex;justify-content: center; align-items: center;">
                <ejs-lineargauge load="gaugeLoad" id='insideTicks' Title='Inside ticks'
                             TitleStyle='titleStyle' Width='150px' Height='350px' style='display:block;' Background='Transparent'
                             Orientation='Vertical'>
                    <e-lineargauge-axes>
                        <e-lineargauge-axis Minimum="0" Maximum="100" OpposedPosition="true" IsInversed=true>
                            <e-axis-labelstyle font=labelFont></e-axis-labelstyle>
                            <e-axis-majorticks Interval="20" Height="7" Width="1" Position=Inside></e-axis-majorticks>
                            <e-axis-minorticks Interval="10" Height="3" Position=Inside></e-axis-minorticks>
                            <e-axis-line Width="5"></e-axis-line>
                            <e-lineargauge-pointers>
                                <e-lineargauge-pointer Width=0></e-lineargauge-pointer>
                            </e-lineargauge-pointers>
                        </e-lineargauge-axis>
                    </e-lineargauge-axes>
                </ejs-lineargauge>
            </div>
            <div id='containerOffset' class="col-xs-5 col-sm-5 col-lg-3 col-md-3" style="display: flex;justify-content: center; align-items: center;">
                <ejs-lineargauge load="gaugeLoad" id='offsetTicks' Title='Ticks with offset'
                             TitleStyle='titleStyle' Width='150px' Height='350px' style='display:block;' Background='Transparent'
                             Orientation='Vertical'>
                    <e-lineargauge-axes>
                        <e-lineargauge-axis Minimum="0" Maximum="100" OpposedPosition="true" IsInversed=true>
                            <e-axis-labelstyle font=labelFont></e-axis-labelstyle>
                            <e-axis-majorticks Interval="20" Height="7" Width="1" Position=Inside Offset=10></e-axis-majorticks>
                            <e-axis-minorticks Interval="10" Height="3" Position=Inside Offset=10></e-axis-minorticks>
                            <e-axis-line Width="5"></e-axis-line>
                            <e-lineargauge-pointers>
                                <e-lineargauge-pointer Width=0></e-lineargauge-pointer>
                            </e-lineargauge-pointers>
                        </e-lineargauge-axis>
                    </e-lineargauge-axes>
                </ejs-lineargauge>
            </div>
        </div>
    </div>
    <!-- custom code start -->
    <style>
        .control-section {
            min-height: 450px;
        }
    </style>
    <!-- custom code end -->
}

<script>
    var outsideTicksGauge, crossTicksGauge, insideTicksGauge, offsetTicksGauge;
    window.gaugeLoad = function (args) {
    @* custom code start *@
        var theme = themeName ? themeName : 'Material';
        args.gauge.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
    @* custom code end *@
        args.gauge.animationDuration = 3000;
        if (args.gauge.element.id === 'outsideTicks') {
            outsideTicksGauge = args.gauge;
        }
        if (args.gauge.element.id === 'crossTicks') {
            crossTicksGauge = args.gauge;
        }
        if (args.gauge.element.id === 'insideTicks') {
            insideTicksGauge = args.gauge;
        }
        if (args.gauge.element.id === 'offsetTicks') {
            offsetTicksGauge = args.gauge;
        }
    }

        document.addEventListener("DOMContentLoaded", function () {
        document.getElementById('horizontal').addEventListener('click', function () {
            outsideTicksGauge.width = crossTicksGauge.width = insideTicksGauge.width = offsetTicksGauge.width = '450px';
            outsideTicksGauge.height = crossTicksGauge.height = insideTicksGauge.height = offsetTicksGauge.height = '150px';
            outsideTicksGauge.orientation = crossTicksGauge.orientation = insideTicksGauge.orientation = offsetTicksGauge.orientation = "Horizontal";
            document.getElementById('horizontal').style.color = "white";
            document.getElementById('horizontal').style.backgroundColor = "#0074E3";
                document.getElementById('vertical').style.color = "black";
                document.getElementById('vertical').style.backgroundColor = "white";
                document.getElementById('containerOutside').className = document.getElementById('containerCross').className =
                    document.getElementById('containerInside').className = document.getElementById('containerOffset').className = "col-xs-12 col-sm-12 col-lg-12 col-md-12";

        });
        document.getElementById('vertical').addEventListener('click', function () {
            outsideTicksGauge.width = crossTicksGauge.width = insideTicksGauge.width = offsetTicksGauge.width = '150px';
            outsideTicksGauge.height = crossTicksGauge.height = insideTicksGauge.height = offsetTicksGauge.height = '350px';
            outsideTicksGauge.orientation = crossTicksGauge.orientation = insideTicksGauge.orientation = offsetTicksGauge.orientation = "Vertical";
                document.getElementById('vertical').style.color = "white";
                document.getElementById('vertical').style.backgroundColor = "#0074E3";
                document.getElementById('horizontal')['style']['color'] = "black";
                document.getElementById('horizontal')['style']['backgroundColor'] = "white";
                document.getElementById('containerOutside').className = document.getElementById('containerCross').className =
                    document.getElementById('containerInside').className = document.getElementById('containerOffset').className = "col-xs-5 col-sm-5 col-lg-3 col-md-3";

        });
    });
</script>

@section Meta{
    <meta name="description" content="This example demonstrates the Ticks in ASP.NET Core LinearGauge control. Explore here for more details." />
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample shows ticks in various positions such as inside, middle, and outside. Additionally, the position of the ticks can be customized using offset.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render and configure ticks in the linear gauge.
            The <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.LinearGauge.LinearGaugeTick.html#Syncfusion_EJ2_LinearGauge_LinearGaugeTick_Position">position</a> and
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.LinearGauge.LinearGaugeTick.html#Syncfusion_EJ2_LinearGauge_LinearGaugeTick_Offset">offset</a> properties in
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.LinearGauge.LinearGaugeTick.html#properties">e-axis-majorticks</a> and
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.LinearGauge.LinearGaugeTick.html#properties">e-axis-minorticks</a> are used to position the ticks as well as provide offset.
        </p>
        <p>
            More information on the ticks can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/linear-gauge/axis#ticks-customization">documentation section</a>.
        </p>
    </div>
}
@section Title{
    <title>ASP.NET Core LinearGauge Ticks Example - Syncfusion Demos </title>
                }
@section Header{
    <h1 class='sb-sample-text'>Example of Ticks in ASP.NET Core LinearGauge Control</h1>
                }