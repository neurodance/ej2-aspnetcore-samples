@using Syncfusion.EJ2;
@section Meta{
    <meta name="description" content="This example demonstrates the Pointer & Ranges Drag in ASP.NET Core CircularGauge control. Explore here for more details." />
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample illustrates dragging a pointer and a range in a circular gauge. End-user can drag the pointer and the range by enabling the pointer drag and range drag options.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to move the pointer and range in the circular gauge via drag action.
            The <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.CircularGauge.CircularGauge.html#Syncfusion_EJ2_CircularGauge_CircularGauge_EnablePointerDrag">enablePointerDrag</a> property can be used to enable or disable the pointer drag functionality. Similarly,
            the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.CircularGauge.CircularGauge.html#Syncfusion_EJ2_CircularGauge_CircularGauge_EnableRangeDrag">enableRangeDrag</a> property can be used to enable or disable the range drag functionality.
        </p>
        <p>
            More information on the pointer drag can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/circular-gauge/gauge-user-interaction#pointer-drag">documentation section</a>.
            Likewise, the range drag information can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/circular-gauge/gauge-ranges#dragging-ranges">documentation section</a>.
        </p>
    </div>
}
@section ControlsSection{
@{ 
        var labelFont = new Syncfusion.EJ2.CircularGauge.CircularGaugeFont { FontFamily = "inherit" };
}
    <div class="col-md-8 control-section">
        <div class="content-wrapper">
            <ejs-circulargauge id="circular" enablePointerDrag="true" dragMove="dragMove" dragEnd="dragEnd" load="gaugeLoad" background="transparent">
                <e-circulargauge-axes>
                    <e-circulargauge-axis startAngle="220" endAngle="140" minimum="0" maximum="120" radius="80%">
                        <e-axis-linestyle width="0" color="transparent" />
                        <e-axis-labelstyle useRangeColor="true" font="labelFont" />
                        <e-axis-majorticks useRangeColor="true" />
                        <e-axis-minorticks useRangeColor="true" />
                        <e-circulargauge-pointers>
                            <e-circulargauge-pointer type="@Syncfusion.EJ2.CircularGauge.PointerType.Marker" value="70" markerShape="@Syncfusion.EJ2.CircularGauge.GaugeShape.InvertedTriangle" radius="110%" markerHeight="20" color="#E5C31C" markerWidth="20" />
                            <e-circulargauge-pointer value="70" radius="60%" color="#E5C31C" markerWidth="5">
                                <e-pointer-cap radius="10">
                                    <e-pointers-cap-border width="5" color="#E5C31C" />
                                </e-pointer-cap>
                                <e-pointer-needletail length="0%" color="#E5C31C" />
                            </e-circulargauge-pointer>
                        </e-circulargauge-pointers>
                        <e-circulargauge-ranges>
                            <e-circulargauge-range start="0" end="40" startWidth="8" endWidth="8" radius="108%" color="#30B32D" />
                            <e-circulargauge-range start="40" end="100" startWidth="8" endWidth="8" radius="108%" color="#E5C31C" />
                            <e-circulargauge-range start="100" end="120" startWidth="8" endWidth="8" radius="108%" color="#F03E3E" />
                        </e-circulargauge-ranges>
                        <e-circulargauge-annotations>
                            <e-circulargauge-annotation content='<div style="font-size: 14px;color:#E5C31C;font-weight: lighter;font-style: oblique;"><span>70 MPH</span></div>' angle="180" zIndex="1.0" radius="45%" />
                        </e-circulargauge-annotations>
                    </e-circulargauge-axis>
                </e-circulargauge-axes>
            </ejs-circulargauge>
        </div>
    </div>

    <div class="col-md-4 property-section">
        <table id="property" title="Properties" style="width: 100%; margin-left: -10px">
            <tbody>
                <tr style="height: 50px">
                    <td>
                        <div style="font-size: 14px; margin-top: -1px">Pointer Value </div>
                    </td>
                    <td style="width: 40%;">
                        <div style="margin-left:-10px">
                            <input type="range" id="value" value="70" min="0" max="120" style="width:90%">
                        </div>
                    </td>
                    <td>
                        <div style="text-align:center; width: 20px;">
                            <span id='pointerValue' style="margin-left:-10px;font-size:14px">70</span>
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div id="enablePointer" style="font-size: 14px">Allow Pointer Drag</div>
                    </td>
                    <td style="width: 40%;">
                        <div style="margin-left: -15px; margin-top: -8px">
                            <ejs-checkbox id="enable" checked="true" change="onChange" style="margin-left: 9px"></ejs-checkbox>
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div id='enableRange' style="font-size: 14px">Allow Ranges Drag</div>
                    </td>
                    <td style="width: 40%;">
                        <div style="margin-left: -15px; margin-top: -5px">
                            <ejs-checkbox id="enableRangeDrag" checked="false" change="onEnableRangeDragChange" style="margin-left: 9px"></ejs-checkbox>
                        </div>
                    </td>
                </tr>

            </tbody>
        </table>
    </div>
}
<script>

    window.gaugeLoad = function (args) {
        @* custom code start *@
        var theme = themeName ? themeName : 'Material';
        args.gauge.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
        @* custom code end *@
    }

    function onChange(args) {
        circulargauge.enablePointerDrag = args.checked;
    }

    function onEnableRangeDragChange(args) {
        circulargauge.enableRangeDrag = args.checked;
    }

    function setPointersValue(circulargauge, pointerValue) {
        var color = ej.circulargauge.getRangeColor(pointerValue, (circulargauge.axes[0].ranges), circulargauge.axes[0].pointers[0].color);
        circulargauge.axes[0].pointers[0].color = color;
        circulargauge.axes[0].pointers[1].color = color;
        circulargauge.axes[0].pointers[0].animation.enable = false;
        circulargauge.axes[0].pointers[1].animation.enable = false;
        circulargauge.axes[0].pointers[0].needleTail.color = color;
        circulargauge.axes[0].pointers[1].needleTail.color = color;
        circulargauge.axes[0].pointers[0].cap.border.color = color;
        circulargauge.axes[0].pointers[1].cap.border.color = color;
        circulargauge.setPointerValue(0, 1, pointerValue);
        circulargauge.setPointerValue(0, 0, pointerValue);
        content = '<div style="font-size: 14px;color:' + color + ';font-weight: lighter;font-style: oblique;"><span>';
        circulargauge.setAnnotationValue(0, 0, content + pointerValue + " MPH</span></div>");
    }

	window.dragMove = function (args) {
		circulargauge.axes[0].pointers[0].animation.enable = false;
		circulargauge.axes[0].pointers[1].animation.enable = false;
		if (isNaN(args.rangeIndex)) {
			pointerValue = Math.round(args.currentValue);
            document.getElementById('pointerValue').innerHTML = pointerValue.toString();
			document.getElementById('value').value = pointerValue.toString();
            circulargauge.setAnnotationValue(0, 0, content + pointerValue + " MPH</span></div>");
		}
	}
	window.dragEnd = function (args) {
		if (args.type !== 'rangeEnd') {
			pointerValue = Math.round(args.currentValue);
			setPointersValue(circulargauge, pointerValue);
		}
	}
    var content = '<div style="font-size: 14px;color:#E5C31C;font-weight: lighter;font-style: oblique;"><span>';
    var circulargauge, pointerValue;
    window.addEventListener('load', function () {
        circulargauge = document.getElementById('circular').ej2_instances[0];
        document.getElementById('value').ontouchmove = document.getElementById('value').onpointermove =
            document.getElementById('value').onchange = function () {
                var pointerValue = parseInt(document.getElementById('value').value, 10);
                setPointersValue(circulargauge, pointerValue, false);
            document.getElementById('pointerValue').innerHTML = pointerValue.toString();
            };
    });
</script>
@section Title{
                    <title>ASP.NET Core CircularGauge Pointer & Ranges Drag Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Pointer & Ranges Drag in ASP.NET Core CircularGauge Control</h1>
                }