@using Syncfusion.EJ2;
@section Meta{
    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET Core CircularGauge control. Explore here for more details." />
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample shows the circular gauge's basic rendering, which includes an axis and a pointer.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, an axis with a pointer is used, and you can use <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.CircularGauge.CircularGaugeAxis.html">e-circulargauge-axis</a> and
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.CircularGauge.CircularGaugePointer.html">e-circulargauge-pointer</a> to get the circular gauge's basic appearance. The circular gauge component helps in the visualization of numerical scale values on a circular scale.
        </p>
        <p>
            More information on the circular gauge can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/circular-gauge/getting-started">documentation section</a>.
        </p>
    </div>
}
@section ControlsSection{
    @{
        var labelFont = new Syncfusion.EJ2.CircularGauge.CircularGaugeFont { FontFamily = "inherit" };
    }
    <div class="control-section">
        <ejs-circulargauge id="circular" background="transparent" load="gaugeLoad">
            <e-circulargauge-axes>
                <e-circulargauge-axis startAngle="230" endAngle="130" minimum="0" maximum="100" radius="80%">
                    <e-axis-linestyle width="8" color="#E0E0E0"></e-axis-linestyle>
                    <e-axis-labelstyle offset="-1" font="labelFont">
                    </e-axis-labelstyle>
                    <e-circulargauge-pointers>
                        <e-circulargauge-pointer value="60" radius="60%" color="#c06c84" pointerWidth=7>
                            <e-pointer-animation enable="true" duration=500></e-pointer-animation>
                            <e-pointer-cap radius="8" color="#c06c84">
                                <e-pointers-cap-border width="0" />
                            </e-pointer-cap>
                            <e-pointer-needletail length="0%" />
                        </e-circulargauge-pointer>
                    </e-circulargauge-pointers>
                    <e-axis-majorticks offset="5"></e-axis-majorticks>
                    <e-axis-minorticks offset="5"></e-axis-minorticks>
                </e-circulargauge-axis>
            </e-circulargauge-axes>
        </ejs-circulargauge>
    </div>
    <!-- custom code start -->
    <style>
        .control-section {
            min-height: 450px;
        }
    </style>
    <!-- custom code end -->
}
<script>
    window.gaugeLoad = function (args) {
       args.gauge.animationDuration = 2000;
    @* custom code start *@
        var theme = themeName ? themeName : 'Material';
        args.gauge.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
    @* custom code end *@
    }
</script>
@section Title{
    <title>ASP.NET Core CircularGauge Default Functionalities Example - Syncfusion Demos </title>
                }
@section Header{
    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET Core CircularGauge Control</h1>
                }