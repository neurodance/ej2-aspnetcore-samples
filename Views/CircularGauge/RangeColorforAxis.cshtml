@using Syncfusion.EJ2;
@section Meta{
    <meta name="description" content="This example demonstrates the Range Color for Axis in ASP.NET Core CircularGauge control. Explore here for more details." />
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample shows the basic rendering of the circular gauge, which includes an axis and a range. Here, the appropriate range color is applied to its respective axis labels, minor ticks, and major ticks.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render and configure the range and axis in the circular gauge with the same color. To accomplish this, set the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.CircularGauge.CircularGaugeLabel.html#Syncfusion_EJ2_CircularGauge_CircularGaugeLabel_UseRangeColor">useRangeColor</a> property in <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.CircularGauge.CircularGaugeLabel.html">e-axis-labelstyle</a>,
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.CircularGauge.CircularGaugeTick.html">e-axis-majorticks</a> and
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.CircularGauge.CircularGaugeTick.html">e-axis-minorticks</a> to <b>true</b>.
        </p>
    </div>
}
@section ControlsSection{
    @{
        var labelFont = new Syncfusion.EJ2.CircularGauge.CircularGaugeFont { FontFamily = "inherit" };
    }
    <div class="control-section">
        <ejs-circulargauge id="gauge" load="gaugeLoad" background="transparent">
            <e-circulargauge-axes>
                <e-circulargauge-axis startAngle="0" endAngle="0" radius="100%" direction=AntiClockWise>
                    <e-axis-linestyle width="0"></e-axis-linestyle>
                    <e-axis-labelstyle offset="2" position=Outside useRangeColor=true hiddenLabel=First font="labelFont"></e-axis-labelstyle>
                    <e-axis-majorticks width="1" height="25" position=Outside interval="10" useRangeColor=true></e-axis-majorticks>
                    <e-axis-minorticks width="1" height="8" position=Outside interval="2" useRangeColor=true></e-axis-minorticks>
                    <e-circulargauge-pointers>
                        <e-circulargauge-pointer radius="0%">
                            <e-pointer-animation enable="false"></e-pointer-animation>
                            <e-pointer-cap radius=0></e-pointer-cap>
                        </e-circulargauge-pointer>
                    </e-circulargauge-pointers>
                    <e-circulargauge-ranges>
                        <e-circulargauge-range start=0 end=35 startWidth="55" endWidth="55" color="#F8A197" radius="90%"></e-circulargauge-range>
                        <e-circulargauge-range start=35 end=70 startWidth="55" endWidth="55" color="#C45072" radius="90%"></e-circulargauge-range>
                        <e-circulargauge-range start=70 end=100 startWidth="55" endWidth="55" color="#1B679F" radius="90%"></e-circulargauge-range>
                    </e-circulargauge-ranges>
                </e-circulargauge-axis>
            </e-circulargauge-axes>
        </ejs-circulargauge>
    </div>
    <!-- custom code start -->
    <style>
        .control-section {
            min-height: 450px;
        }
    </style>
    <!-- custom code end -->
}
<script>
    window.gaugeLoad = function (args) {
       args.gauge.animationDuration = 2000;
    @* custom code start *@
        var theme = themeName ? themeName : 'Material';
        args.gauge.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
    @* custom code end *@
    }
</script>
@section Title{
    <title>ASP.NET Core CircularGauge Range Color for Axis Example - Syncfusion Demos </title>
                }
@section Header{
    <h1 class='sb-sample-text'>Example of Range Color for Axis in ASP.NET Core CircularGauge Control</h1>
                }