@using Syncfusion.EJ2;
@section Meta{
    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET Core CircularGauge control. Explore here for more details." />
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates a circular gauge with an axis and a background image set for the axis.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render and configure the axis in the circular gauge with a background image. To accomplish this, the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.CircularGauge.CircularGaugeAnnotation.html">e-circulargauge-annotation</a> is used and an image is set as the background content.
        </p>
        <p>
            More information on the annotations can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/circular-gauge/gauge-annotations">documentation section</a>.
        </p>
    </div>
}
@section ControlsSection{
    @{
        var labelFont = new Syncfusion.EJ2.CircularGauge.CircularGaugeFont { Size ="0px"};
    }
    <div class="control-section" style="overflow-x:hidden">
        <ejs-circulargauge id="circular" centerY="65%" load="gaugeLoad" style='display:block;' background='transparent' loaded='gaugeLoaded' resized='gaugeResize'>
            <e-circulargauge-axes>
                <e-circulargauge-axis startAngle="0" endAngle="0" radius="80%">
                    <e-axis-linestyle width="0" ></e-axis-linestyle>
                    <e-axis-labelstyle font="labelFont">
                    </e-axis-labelstyle>
                    <e-circulargauge-pointers>
                        <e-circulargauge-pointer radius="0%">
                        </e-circulargauge-pointer>
                    </e-circulargauge-pointers>
                    <e-axis-majorticks width=0 color="transperent"></e-axis-majorticks>
                    <e-axis-minorticks width=0 color="transperent"></e-axis-minorticks>
                    <e-circulargauge-annotations>
                        <e-circulargauge-annotation content="<div style='margin-top: -37%;'><img src='../styles/images/circulargauge/axis-background.png' height='400' width='400' /></div>" angle="0" zIndex="1" radius="0%"></e-circulargauge-annotation>
                        <e-circulargauge-annotation content="<div id='subGauge' style='margin-left: -50%; margin-top: -50%;'></div>" angle="0" zIndex="1" radius="0%"></e-circulargauge-annotation>
                        <e-circulargauge-annotation content="<div style='color:orange;margin-top: -89px;margin-left: -2px;font-size: 18px;'>90</div>" angle="0" zIndex="1" radius="0%"></e-circulargauge-annotation>
                    </e-circulargauge-annotations>
                </e-circulargauge-axis>
            </e-circulargauge-axes>
        </ejs-circulargauge>
    </div>
    <!-- custom code start -->
    <style>
        .control-section {
            min-height: 450px;
        }
    </style>
    <!-- custom code end -->

}
<script>
    window.gaugeLoad = function (args) {
        @* custom code start *@
        var theme = themeName ? themeName : 'Material';
        args.gauge.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
        @* custom code end *@
    }
    window.gaugeResize = function (args) {
        window.location.reload();
    }
    window.gaugeLoaded = function (args) {
        var subGauge1 = new ej.circulargauge.CircularGauge({
            width: '600px',
            height: '450px',
            background: 'transparent',
            axes: [{
                labelStyle: { hiddenLabel: 'First', font: { fontFamily: 'inherit', color: 'White' } },
                majorTicks: { height: 15, interval: 30 },
                minorTicks: { height: 10, interval: 6 }, minimum: 0, maximum: 360,
                pointers: [{
                    value: 90,
                    radius: '45%', markerWidth: 12, markerHeight: 12,
                    type: 'Marker', markerShape: 'Triangle', color: 'Orange',
                    animation: { enable: true, duration: 500 }
                }], startAngle: 0, endAngle: 0, radius: '60%', lineStyle: { width: 0 }
            }]
        });
        subGauge1.appendTo('#subGauge');
    }

</script>
@section Title{
    <title>ASP.NET Core CircularGauge Axis Background Example - Syncfusion Demos </title>
                }
@section Header{
    <h1 class='sb-sample-text'>Example of Axis Background in ASP.NET Core CircularGauge Control</h1>
                }