@section ControlsSection{
    @{

        List<object> commands = new List<object>();
        commands.Add(new { type = "Edit", buttonOption = new { iconCss = "e-icons e-edit", cssClass = "e-flat" } });
        commands.Add(new { type = "Delete", buttonOption = new { iconCss = "e-icons e-delete", cssClass = "e-flat" } });
        commands.Add(new { type = "Save", buttonOption = new { iconCss = "e-icons e-update", cssClass = "e-flat" } });
        commands.Add(new { type = "Cancel", buttonOption = new { iconCss = "e-icons e-cancel-icon", cssClass = "e-flat" } });

    }
    <div class="control-section">
        <ejs-grid id="Grid" dataSource="ViewBag.dataSource" allowPaging="true" cssClass="e-css">
            <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" allowEditOnDblClick="false"></e-grid-editSettings>
            <e-grid-pagesettings pageCount="5"></e-grid-pagesettings>
            <e-grid-columns>
                <e-grid-column field="OrderID" headerText="Order ID" validationRules="@(new { required=true})" isPrimaryKey="true" textAlign="Right" width="100"></e-grid-column>
                <e-grid-column field="CustomerID" headerText="Customer Name" validationRules="@(new { required=true})" width="140"></e-grid-column>
                <e-grid-column field="Freight" headerText="Freight" validationRules="@(new { required=true})" textAlign="Right" editType="numericedit" format="C2" width="140"></e-grid-column>
                <e-grid-column field="OrderDate" headerText="Order Date" editType="datepickeredit" format="yMd" textAlign="Right" width="170"></e-grid-column>
                <e-grid-column field="ShipCountry" headerText="Ship Country" editType="dropdownedit" width="140"></e-grid-column>
                <e-grid-column field="Verified" headerText="Verified" editType="booleanedit" displayAsCheckBox="true" textAlign="Center" type="boolean" width="100"></e-grid-column>
                <e-grid-column headerText="Manage Records" width="150" commands="commands"></e-grid-column>
            </e-grid-columns>
        </ejs-grid>
    </div>
}

@section ActionDescription{
	<div id="action-description">
		<p>This sample demonstrates CRUD operations in Grid using command column. You can perform CRUD operations as follows,</p>
         <ul>
                <li><code>Edit</code> - To edit record, double click a row or click Edit button from command column after selected a row </li>
                <li><code>Delete</code> - To delete record, click Delete button from command column after selected a row </li>
                <li><code>Update</code>,<code>Cancel</code> - You can save or discard changes by click Update and Cancel button from command column respectively</li>
            </ul>
	</div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Command Column in ASP.NET Core Data Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">		   
		<p>
        The Grid provides an option to render CRUD action buttons in a column by using the CommandColumn feature. The
        <code>columns->commands</code> property accepts array of <code>CommandModel</code> object. The predefined command button can be defined by using <code>type
        </code> property.
    </p>
    <p>The built-in command button are,</p>
    <ul>
       <li><code>Edit</code></li>     
       <li><code>Delete</code></li>     
       <li><code>Cancel</code></li>  
       <li><code>Save</code></li> 
   </ul>
	</div>
}
@section Title{
                    <title>ASP.NET Core Data Grid Command Column Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Command Column in ASP.NET Core Data Grid Control</h1>
                }
