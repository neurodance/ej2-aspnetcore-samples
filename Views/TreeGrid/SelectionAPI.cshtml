@using Syncfusion.EJ2


@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            <div class="control-section">
                <ejs-treegrid id="TreeGrid" dataSource="ViewBag.dataSource" allowSelection="true" allowPaging="true" childMapping="Children" height="350" treeColumnIndex="1">
                    <e-treegrid-selectionsettings type="Multiple" mode="Row"></e-treegrid-selectionsettings>
                    <e-treegrid-pagesettings pageSize="10"></e-treegrid-pagesettings>
                    <e-treegrid-columns>
                        <e-treegrid-column field="TaskId" headerText="Task ID" textAlign="Right" width="80"></e-treegrid-column>
                        <e-treegrid-column field="TaskName" headerText="Task Name" width="200"></e-treegrid-column>
                        <e-treegrid-column field="StartDate" headerText=" Start Date" textAlign="Right" format="yMd" type="date" width="100"></e-treegrid-column>
                        <e-treegrid-column field="Duration" headerText="Duration" textAlign="Right" width="90"></e-treegrid-column>
                        <e-treegrid-column field="Progress" headerText="Progress" textAlign="Right" width="90"></e-treegrid-column>
                    </e-treegrid-columns>
                </ejs-treegrid>
            </div>
        </div>
    </div>

    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tr>
                <td>
                    <div><b>Select Rows</b></div>
                </td>
            </tr>
            <tr>
                <td style="width: 30%">
                    <div style="padding-top: 8px">Start</div>
                </td>
                <td style="width: 70%;padding-right: 10px">
                    <div id='numericbox'>
                        <ejs-numerictextbox id="start" width="100" min="0" max="11" format="##"></ejs-numerictextbox>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 30%">
                    <div style="padding-top: 8px">To</div>
                </td>
                <td style="width: 70%;padding-right: 10px">
                    <div>
                        <ejs-numerictextbox id="to" width="100" min="0" max="11" format="##"></ejs-numerictextbox>
                    </div>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <div class="col-md-6">
                        <ejs-button id="select" cssClass="btn btn-default" content="Select Row"></ejs-button>
                    </div>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <div class="col-md-12"><b>Clear Selection</b></div>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <div class="col-md-6" style="padding-bottom: 10px">
                        <ejs-button id="clear" cssClass="btn btn-default" content="Clear Selection"></ejs-button>
                    </div>
                </td>
            </tr>
        </table>
    </div>
    <script>
        document.getElementById('select').onclick = () => {
            var treegrid = document.getElementById('TreeGrid').ej2_instances[0];
            var startRow = document.getElementById('start').ej2_instances[0].value;
            var toRow = document.getElementById('to').ej2_instances[0].value;
            var rows = [];
            for (var i = startRow > toRow ? toRow : startRow ; i <= (startRow > toRow ? startRow : toRow); i++) {
                rows.push(i);
            }
            treegrid.selectRows(rows);
        };
        document.getElementById('clear').onclick = () => {
            var treegrid = document.getElementById('TreeGrid').ej2_instances[0];
            treegrid.clearSelection();
        };
    </script>
}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Selection API in ASP.NET Core Tree Grid control. Explore here for more details."/>
                }

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the selection functionality of the TreeGrid, you can select multiple row by entering start and end index then click the select row button.
            To clear all selected rows, click clear selection button.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            Selection provides an interactive support to highlight the row or cell that you select.
            Selection can be done through a simple Mouse down or Keyboard interaction.
            To enable selection, set <code>allowSelection</code> as true.
        </p>
        <p>
            TreeGrid supports two types of selection which can be set using
            <code>
                selectionSettings->type
            </code> property. They are,
        </p>
        <ul>
            <li><code>single</code> - Enabled by default. Allows the user to select single row/cell at a time.</li>
            <li><code>multiple</code> - Allows the user to select more than one row/cell at a time.</li>
        </ul>
        <p>
            Also, supports three modes of selection which can be set using
            <code>
                selectionSettings->mode
            </code> property. They are,
        </p>
        <ul>
            <li><code>Row</code> - Enabled by default. Enables row selection in TreeGrid.</li>
            <li><code>Cell</code> - Enables cell selection in TreeGrid.</li>
            <li>
                <code>Both</code> - Enables both row and cell selection in TreeGrid.
                Clicking any cell will select both the row and cell simultaneously.
            </li>
        </ul>
        <p>
            The treegrid supports two types of cell selection mode that can be set by using the
            <code>
                selectionSettings->cellSelectionMode
            </code> property. They are,
        </p>
        <ul>
            <li>
                <code>Flow</code> - The Flow value is set by default. The range of cells are selected between the start index
                and end index that includes in between cells of rows.
            </li>
            <li>
                <code>Box</code> - Range of cells are selected from the start and
                end column indexes that includes in between cells of rows within the range.
            </li>
        </ul>
        <p>
            To perform the multi-selection, hold <strong>CTRL</strong> key and click the desired rows/cells.
            To select range of rows/cells, hold <strong>SHIFT</strong> key and click the rows/cells.
        </p>
        <p>
            While using the TreeGrid in a touch device environment, there is an option for multi-selection
            through single tap on the row and it will show a popup with the multi-selection symbol.
            Tap the icon to enable multi-selection in a single tap.
        </p>
        <p>
            In this demo, enter the values in the Start and To text box to select range of rows.
            And click the Clear Selection button to deselect the rows.
        </p>

        <p>
            More information on the data binding can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/tree-grid/selection/selection">documentation section</a>.
        </p>
    </div>
}

@*custom code end*@
@section Title{
                    <title>ASP.NET Core Tree Grid Selection API Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Selection API in ASP.NET Core Tree Grid Control</h1>
                }