@using Syncfusion.EJ2


@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            <ejs-treegrid id="TreeGrid" dataSource="ViewBag.dataSource" toolbarClick="toolbarClick" allowExcelExport="true" allowPdfExport="true" toolbar="@(new List<string>() { "ExcelExport", "CsvExport", "PdfExport"})" height="400" childMapping="Children" treeColumnIndex="1">
                <e-treegrid-columns>
                    <e-treegrid-column field="TaskId" headerText="Task ID" textAlign="Right" width="90"></e-treegrid-column>
                    <e-treegrid-column field="TaskName" headerText="Task Name" width="220"></e-treegrid-column>
                    <e-treegrid-column field="StartDate" headerText=" Start Date" textAlign="Right" format="yMd" type="date" width="110"></e-treegrid-column>
                    <e-treegrid-column field="EndDate" headerText=" End Date" textAlign="Right" format="yMd" type="date" width="110"></e-treegrid-column>
                    <e-treegrid-column field="Duration" headerText="Duration" textAlign="Right" width="100"></e-treegrid-column>
                    <e-treegrid-column field="Progress" headerText="Progress" textAlign="Right" width="100"></e-treegrid-column>
                </e-treegrid-columns>
            </ejs-treegrid>
        </div>
    </div>

    <div class="col-lg-2 property-section">
        <table id="property" title="Export Customization" style="width: 200px">
            <tr>
                <td style="width: 20px;">
                    <ejs-checkbox id="checked" checked="true" change="onChange" label="Persist collapsed state"></ejs-checkbox>
                </td>
            </tr>
        </table>

    </div>
    <style>
        #property td div.e-checkbox-wrapper {
            padding-left: 0px !important;
            padding-top: 0px !important;
        }
    </style>

    <script>
        var collapsedStatePersist = true;
        function toolbarClick(args) {
            var treeGridObj = document.getElementById("TreeGrid").ej2_instances[0];
            if (args.item.id === treeGridObj.grid.element.id + '_excelexport') {
                var excelExportProperties = {
                    isCollapsedStatePersist: collapsedStatePersist
                };
                treeGridObj.excelExport(excelExportProperties);
            } else if (args.item.id === treeGridObj.grid.element.id + '_pdfexport') {
                if (treeGridObj.enableRtl === true && treeGridObj.locale === 'ar') {
                    var innercontent = 'You need custom fonts to export Arabic characters, refer this <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/tree-grid/pdf-export/#add-custom-font-for-pdf-exporting">documentation section</a>';
                    ej.popups.DialogUtility.alert({ content: innercontent });
                } else {
                    var pdfExportProperties = {
                        isCollapsedStatePersist: collapsedStatePersist
                    };
                    treeGridObj.pdfExport(pdfExportProperties);
                }
            } else if (args.item.id === treeGridObj.grid.element.id + '_csvexport') {
                treeGridObj.csvExport();
            }
        }

        function onChange(args) {
            if (args.checked) {
                collapsedStatePersist = true;
            }
            else {
                collapsedStatePersist = false;
            }
        }
    </script>
}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Default Exporting in ASP.NET Core Tree Grid control. Explore here for more details."/>
                }

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the client-side exporting of the TreeGrid, which allows you to export its data to the Excel, Pdf and CSV formats. Use the toolbar buttons to export TreeGrid data to desired format. </p>
        <p>By using the Persist collapsed state checkbox we can persist the Expand/Collpase state of Tree Grid in exported document </p>
    </div>
}

@section Description{
    <div id="description">

        <p>TreeGrid supports client-side exporting which allows you to export its data to the Excel, Pdf and CSV formats.</p>
        <p>In this demo, for the toolbar items of exporting, we have defined actions in <code>toolbarClick</code> event to export the TreeGrid data using the <code>excelExport</code>, <code>pdfExport</code> and <code>csvExport</code> methods.</p>
        <br>

        <p>
             More information on the  
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/treegrid/pdf-export/pdf-export">
            Pdf exporting </a> and
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/treegrid/excel-export/excel-export">
            Excel exporting</a>
            can be found in documentation section.
        </p>
    </div>
}

@*custom code end*@
@section Title{
                    <title>ASP.NET Core Tree Grid Default Exporting Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default Exporting in ASP.NET Core Tree Grid Control</h1>
                }