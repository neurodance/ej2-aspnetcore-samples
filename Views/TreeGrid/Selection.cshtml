@using Syncfusion.EJ2


@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            <ejs-treegrid id="TreeGrid" dataSource="ViewBag.dataSource" allowSelection="true" allowPaging="true" childMapping="Children" height="350" treeColumnIndex="1">
                <e-treegrid-selectionsettings type="Multiple" mode="Row"></e-treegrid-selectionsettings>
                <e-treegrid-pagesettings pageSize="10"></e-treegrid-pagesettings>
                <e-treegrid-columns>
                    <e-treegrid-column field="TaskId" headerText="Task ID" textAlign="Right" width="80"></e-treegrid-column>
                    <e-treegrid-column field="TaskName" headerText="Task Name" width="200"></e-treegrid-column>
                    <e-treegrid-column field="StartDate" headerText=" Start Date" textAlign="Right" format="yMd" type="date" width="100"></e-treegrid-column>
                    <e-treegrid-column field="Duration" headerText="Duration" textAlign="Right" width="90"></e-treegrid-column>
                    <e-treegrid-column field="Progress" headerText="Progress" textAlign="Right" width="90"></e-treegrid-column>
                </e-treegrid-columns>
            </ejs-treegrid>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tr>
                <td style="width: 30%">
                    <div style="padding-top: 7px">Selection Type</div>
                </td>
                <td style="width: 70%;padding-right: 5px">
                    <div>
                        <ejs-dropdownlist id="type" width= "100px" dataSource="@ViewBag.typedata" change="onTypeChange" index="1" popupHeight="220px">
                            <e-dropdownlist-fields text="type" value="id"></e-dropdownlist-fields>
                        </ejs-dropdownlist>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 30%">
                    <div>
                        Selection Mode
                    </div>
                </td>
                <td style="width: 70%;padding-right: 5px">
                    <div>
                        <ejs-dropdownlist id="mode" width= "100px" dataSource="@ViewBag.modedata" change="onModeChange" index="0" popupHeight="220px">
                            <e-dropdownlist-fields text="mode" value="id"></e-dropdownlist-fields>
                        </ejs-dropdownlist>
                    </div>
                </td>
            </tr>
            <tr id='cellselection' style='display: none'>
                <td style="width: 30%;">
                    <div>
                        Cell Selection Mode
                    </div>
                </td>
                <td style="width: 70%;padding-right: 5px">
                    <div>
                        <ejs-dropdownlist id="cellmode" width= "100px" dataSource="@ViewBag.cellmodedata" change="onCellModeChange" index="0" popupHeight="220px">
                            <e-dropdownlist-fields text="cellmode" value="id"></e-dropdownlist-fields>
                        </ejs-dropdownlist>
                    </div>
                </td>
            </tr>
        </table>
    </div>

    <script>
        function onTypeChange(e) {
            var type = e.value;
            var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
            var dropDownMode = document.getElementById("mode").ej2_instances[0];
            var mode = dropDownMode.value;
            treegrid.selectionSettings.type = type;
            if (type === 'Multiple' && mode === 'Cell') {
                document.getElementById('cellselection').style.display = 'table-row';
            }
            else {
                document.getElementById('cellselection').style.display = 'none';
            }

        }

        function onModeChange(e) {
            var mode = e.value;
            var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
            var dropDownType = document.getElementById("type").ej2_instances[0];
            var type = dropDownType.value;
            treegrid.selectionSettings.mode = mode;
            if (type === 'Multiple' && mode === 'Cell') {
                document.getElementById('cellselection').style.display = 'table-row';
            }
            else {
                document.getElementById('cellselection').style.display = 'none';
            }

        }

        function onCellModeChange(e) {
            var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
            treegrid.selectionSettings.cellSelectionMode = e.value;
        }

    </script>

}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Selection in ASP.NET Core Tree Grid control. Explore here for more details."/>
                }

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the selection feature in TreeGrid, which allows you to select row through simple mouse down or keyboard interaction.

        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            Selection provides an interactive support to highlight the row or cell that you select.
            Selection can be done through a simple
            Mouse down or Keyboard interaction. To enable selection, set <code>
                allowSelection
            </code> as true.
        </p>
        <p>
            TreeGrid supports two types of selection which can be set using
            <code>
                selectionSettings->type
            </code> property. They are,
        </p>
        <ul>
            <li><code>Single</code> - Enabled by default. Allows the user to select single row/cell at a time.</li>
            <li><code>Multiple</code> - Allows the user to select more than one row/cell at a time.</li>
        </ul>
        <p>
            Also, supports three modes of selection which can be set using
            <code>
                selectionSettings->mode
            </code> property. They are,
        </p>
        <ul>
            <li><code>Row</code> - Enabled by default. Enables the row selection in TreeGrid.</li>
            <li><code>Cell</code> - Enables the cell selection in TreeGrid.</li>
            <li>
                <code>Both</code> - Enables both the row and cell selection in TreeGrid.
                Clicking any cell will select the both row and cell simultaneously.
            </li>
        </ul>
        <p>
            The treegrid supports two types of cell selection mode that can be set by using the
            <code>
                selectionSettings->cellSelectionMode
            </code> property. They are,
        </p>
        <ul>
            <li>
                <code>Flow</code> - The Flow value is set by default. The range of cells are selected between the start index
                and end index that includes in between cells of rows.
            </li>
            <li>
                <code>Box</code> - Range of cells are selected from the start and
                end column indexes that includes in between cells of rows within the range.
            </li>
        </ul>
        <p>
            To perform the multi-selection, hold <strong>CTRL</strong> key and click the desired rows/cells.
            To select range of rows/cells, hold <strong>SHIFT</strong> key and click the rows/cells.
        </p>
        <p>
            While using the TreeGrid in a touch device environment, there is an option for multi-selection
            through single tap on the row and it will show a popup with the multi-selection symbol.
            Tap the icon to enable multi-selection in a single tap.
        </p>
        <br />

        <p>
            More information on the data binding can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/tree-grid/selection/selection">documentation section</a>.
        </p>
    </div>
}

@*custom code end*@
@section Title{
                    <title>ASP.NET Core Tree Grid Selection Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Selection in ASP.NET Core Tree Grid Control</h1>
                }