@using Syncfusion.EJ2


@section ControlsSection{
    @{

        List<object> commands = new List<object>();
        commands.Add(new { type = "Edit", buttonOption = new { iconCss = "e-icons e-edit", cssClass = "e-flat" } });
        commands.Add(new { type = "Delete", buttonOption = new { iconCss = "e-icons e-delete", cssClass = "e-flat" } });
        commands.Add(new { type = "Save", buttonOption = new { iconCss = "e-icons e-update", cssClass = "e-flat" } });
        commands.Add(new { type = "Cancel", buttonOption = new { iconCss = "e-icons e-cancel-icon", cssClass = "e-flat" } });

        var dict = new Dictionary<string, object>();
        dict.Add("number", true);
        dict.Add("min", 0);
    }
    <div class="control-section">

        <ejs-treegrid id="TreeGrid" dataSource="ViewBag.dataSource" height="400" childMapping="Children" treeColumnIndex="1">
            <e-treegrid-editsettings allowAdding="true" allowEditing="true" allowDeleting="true" newRowPosition="Below" mode="Row"></e-treegrid-editsettings>
            <e-treegrid-columns>
                <e-treegrid-column field="TaskId" headerText="Task ID" isPrimaryKey="true" validationRules="@(new { required=true, number=true})" edit="@(new{@params=new{format="n"}})" textAlign="Right" width="100"></e-treegrid-column>
                <e-treegrid-column field="TaskName" headerText="Task Name" validationRules="@(new { required=true})" editType="stringedit" width="225"></e-treegrid-column>
                <e-treegrid-column field="StartDate" headerText=" Start Date" validationRules="@(new { date=true})" editType="datepickeredit" textAlign="Right" format="yMd" type="date" width="140"></e-treegrid-column>
                <e-treegrid-column field="Duration" headerText="Duration" validationRules="@(dict)" editType="numericedit" edit="@(new{@params=new{format="n"}})" textAlign="Right" width="130"></e-treegrid-column>
                <e-treegrid-column headerText="Manage Records" width="155" commands="commands"></e-treegrid-column>
            </e-treegrid-columns>
        </ejs-treegrid>
    </div>
}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Command Column in ASP.NET Core Tree Grid control. Explore here for more details."/>
                }

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates CRUD operations in TreeGrid using command column. You can perform CRUD operations as follows,
        </p>
        <ul>
            <li><code>Edit</code> - To edit record, double click a row or click Edit button from command column after selected a row.</li>
            <li><code>Delete</code> - To delete record, click Delete button from command column after selected a row.</li>
            <li><code>Update, Cancel</code> -You can save or discard changes by click Update and Cancel button from command column respectively.</li>
        </ul>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The TreeGrid provides an option to render CRUD action buttons in a column by using the <a target="_blank" href="#">CommandColumn</a> feature. The <code><a target="_blank" class="code" href="#">columns->commands</a></code> property accepts array of CommandModel object. The predefined command button can be defined by using type property.
        </p>
        <p>
            The built-in command button are,
        </p>
        <ul>
            <li><code>Edit </code></li>
            <li><code>Delete</code></li>
            <li><code>Cancel</code></li>
            <li><code>Save</code></li>
        </ul>
        <br>

        <p>
            More information on the data binding can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/tree-grid/editing/command-column-editing">documentation section</a>.
        </p>
    </div>
}

@*custom code end*@
@section Title{
                    <title>ASP.NET Core Tree Grid Command Column Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Command Column in ASP.NET Core Tree Grid Control</h1>
                }