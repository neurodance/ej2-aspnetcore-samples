@using Syncfusion.EJ2


@section ControlsSection{
    @{
        var contextItems = new string[]{"SortAscending", "SortDescending",
 "Edit", "Delete", "Save", "Cancel",
"PdfExport", "ExcelExport", "CsvExport", "FirstPage", "PrevPage",
"LastPage", "NextPage", "Indent", "Outdent" };
    }
    <div class="control-section">

        <ejs-treegrid id="TreeGrid" dataSource="ViewBag.dataSource" contextMenuItems="contextItems" allowExcelExport="true" allowPdfExport="true" allowSorting="true" allowPaging="true" childMapping="Children" height="350" treeColumnIndex="1">
            <e-treegrid-pagesettings pageSize="10"></e-treegrid-pagesettings>
            <e-treegrid-editsettings allowAdding="true" allowEditing="true" allowDeleting="true" mode="Row"></e-treegrid-editsettings>
            <e-treegrid-columns>
                <e-treegrid-column field="TaskId" headerText="Task ID" isPrimaryKey="true" validationRules="@(new { required=true, number=true})" edit="@(new{@params=new{format="n"}})" textAlign="Right" width="100"></e-treegrid-column>
                <e-treegrid-column field="TaskName" headerText="Task Name" width="190" validationRules="@(new { required=true})"></e-treegrid-column>
                <e-treegrid-column field="StartDate" headerText=" Start Date" validationRules="@(new { date=true})" editType="datepickeredit" textAlign="Right" format="yMd" type="date" width="120"></e-treegrid-column>
                <e-treegrid-column field="Duration" headerText="Duration" validationRules="@(new { number=true, min=0})" editType="numericedit" edit="@(new{@params=new{format="n"}})" textAlign="Right" width="110"></e-treegrid-column>
                <e-treegrid-column field="Progress" headerText="Progress" validationRules="@(new { number=true, min=0})" editType="numericedit" edit="@(new{@params=new{format="n"}})" textAlign="Right" width="120"></e-treegrid-column>
                <e-treegrid-column field="Priority" headerText="Priority" textAlign="Right" width="100"></e-treegrid-column>
            </e-treegrid-columns>
        </ejs-treegrid>

    </div>
}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Default ContextMenu in ASP.NET Core Tree Grid control. Explore here for more details."/>
                }

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the usage of context menu in TreeGrid component. Right click anywhere on the TreeGrid to view context menu.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            TreeGrid has an option to show the context menu when right click on it. To configure the items in context menu, you should define either default or custom item in <code>contextMenuItems</code> . Each item will be shown based on its target.
            The default items are
            <br>
        </p>
        <ul>
            <li><code>Edit</code> - Edit the current record.</li>
            <li><code>Delete</code> - Delete the current record.</li>
            <li><code>Save</code> - Save the edited record.</li>
            <li><code>Cancel</code> - Cancel the edited state.</li>
            <li><code>PdfExport</code> - Export the grid as Pdf format.</li>
            <li><code>ExcelExport</code> - Export the grid as Excel format.</li>
            <li><code>CsvExport</code> - Export the grid as CSV format.</li>
            <li><code>SortAscending</code> - Sort the current column in ascending order.</li>
            <li><code>SortDescending</code> - Sort the current column in descending order.</li>
            <li><code>FirstPage</code> - Go to the first page.</li>
            <li><code>PrevPage</code> - Go to the previous page.</li>
            <li><code>LastPage</code> - Go to the last page.</li>
            <li><code>NextPage</code> - Go to the next page.</li>
            <li>
                <code>Add Row</code>
                <ul>
                    <li><code>Above</code> - Add a new row above the selected row</li>
                    <li><code>Below</code> - Add a new row below the selected row</li>
                </ul>
            </li>
         <li><code>Indent</code> - Indents the record to one level of hierarchy.</li>
         <li><code>Outdent</code> - Outdent the record to one level of hierarchy.</li>
        </ul>

        <br />

        <p>
            In this demo, Context Menu feature has enabled by defining the <code>contextMenuItems</code> property with all default items.
        </p>
        <br>

        <p>
            More information on the data binding can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/tree-grid/context-menu">documentation section</a>.
        </p>
    </div>
}

@*custom code end*@
@section Title{
                    <title>ASP.NET Core Tree Grid Default ContextMenu Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default ContextMenu in ASP.NET Core Tree Grid Control</h1>
                }