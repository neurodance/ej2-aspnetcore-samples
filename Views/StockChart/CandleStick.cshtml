@using Syncfusion.EJ2
@section ControlsSection{

    <div class="control-section" align="center">
        <div id="container">
            <ejs-stockchart id="stockchartcandle" load="stockload" axisLabelRender="labelRender" tooltipRender="tooltipRender" title="AAPL Historical">
                <e-stockchart-chartarea>
                    <e-stockchartarea-border width="0"></e-stockchartarea-border>
                </e-stockchart-chartarea>
                <e-stockchart-border width="0"></e-stockchart-border>
                <e-stockchart-primaryxaxis>
                    <e-majorgridlines width="0"></e-majorgridlines>
                    <e-crosshairtooltip enable="true"></e-crosshairtooltip>
                </e-stockchart-primaryxaxis>
                <e-stockchart-primaryyaxis>
                    <e-linestyle width="0"></e-linestyle>
                    <e-majorticklines height="0"></e-majorticklines>
                </e-stockchart-primaryyaxis>
                <e-stockchart-tooltipsettings enable="true" shared="true" format="High : <b>${point.high}</b><br/>Low :<b>${point.low}</b><br/>Open : <b>${point.open}</b><br/>Close : <b>${point.close}</b><br/>Volume : <b>${point.volume}</b>"></e-stockchart-tooltipsettings>
                <e-stockchart-legendsettings visible="true"></e-stockchart-legendsettings>
                <e-stockchart-crosshairsettings enable="true"></e-stockchart-crosshairsettings>
                <e-stockchart-axes>
                    <e-stockchart-axis rowIndex=1 name='yAxis1' opposedPosition='true' labelPosition='Inside' tickPosition='Inside'>
                    </e-stockchart-axis>
                </e-stockchart-axes>
                <e-stockchart-rows>
                    <e-stockchart-row height=30%></e-stockchart-row>
                    <e-stockchart-row height=70%></e-stockchart-row>
                </e-stockchart-rows>
                <e-stockchart-series-collection>
                     <e-stockchart-series type='Candle' xName='x' yName='high' yAxisName='yAxis1' name='Apple Inc' high='high' low='low'> </e-stockchart-series>
                    <e-stockchart-series type='Column' xName='x' yName='volume' high='high' low='low' name='Volume' enableTooltip="false"></e-stockchart-series>
                </e-stockchart-series-collection>
            </ejs-stockchart>
        </div>    
    </div>
    <script src="~/scripts/chart/financial-data.js"></script>
    <script>
        var data = chartData;
        function stockload(args) {
            @*custom code start*@
            let selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.stockChart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
            @* custom code end *@
            args.stockChart.series[0].dataSource = data;
            args.stockChart.series[1].dataSource = data;
        }
        function labelRender(args)  {
            let text = parseFloat(args.text);
            if (args.axis.name === 'primaryYAxis') {
                args.text = text / 100000000 + 'B';
            }
        }
        function tooltipRender(args) {
            if (args.text.split('<br/>')[4]) {
                let target = parseFloat(args.text.split('<br/>')[4].split('<b>')[1].split('</b>')[0]);
                let value = (target / 100000000).toFixed(1) + 'B';
                args.text = args.text.replace(args.text.split('<br/>')[4].split('<b>')[1].split('</b>')[0], value);
            }
        }
    </script>

}
@*custom code start*@
@section Scripts {

}
@*custom code end*@
@section ActionDescription{
    <p>This <a target="_blank" href="https://www.syncfusion.com/aspnet-core-ui-controls/stock-chart">ASP.NET Core Stock Chart</a> example visualizes the AAPL stock price with Candle chart. Tooltip and crosshair show the information about the data and period.</p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure a stock chart for AAPL data, as well as how to use column charts to display data volume. The <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/stock-chart/period-selector">Period Selector</a> and <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/stock-chart/range-selector">Range Selector</a> can be used to select a range with specified periods.
    </p>
    <p>
        The legend is enabled, and you can use it to toggle the visibility of series in the stock chart. To customize the legend in the stock chart, use the <code>StockChartLegendSettings</code> property.
    </p>
}
@section Title{
                    <title>ASP.NET Core StockChart Candlestick and volume Example - Syncfusion Demos </title> 
                }
@section Meta{
                    <meta name="description" content="This example demonstrates the Candlestick and volume in ASP.NET Core StockChart control. Explore here for more details."/>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Candlestick and volume in ASP.NET Core StockChart Control</h1>
                }